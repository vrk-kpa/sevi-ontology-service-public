<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>fi.vm.kapa.sevi.ontology</groupId>
    <artifactId>sevi-ontology-service</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/vrk-kpa/sevi-ontology-service-public/blob/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.5.RELEASE</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.SR3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
    </repositories>

    <dependencies>

        <dependency>
            <groupId>fi.vm.kapa.sevi</groupId>
            <artifactId>sevi-service-commons-logging</artifactId>
            <version>${sevi.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>fi.vm.kapa.sevi</groupId>
            <artifactId>sevi-service-commons-metrics</artifactId>
            <version>${sevi.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>fi.vm.kapa.sevi</groupId>
            <artifactId>sevi-service-commons-constants</artifactId>
            <version>${sevi.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>fi.vm.kapa.sevi</groupId>
            <artifactId>sevi-service-commons-services</artifactId>
            <version>${sevi.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>fi.vm.kapa.sevi</groupId>
            <artifactId>sevi-service-commons-cache</artifactId>
            <version>${sevi.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>0.7.4</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-tdb</artifactId>
            <version>3.0.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
        </dependency>

        <!-- Jersey: JSON support  -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-core</artifactId>
            <scope>compile</scope>
            <version>${swagger.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Redis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.8.1</version>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Mockito for testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <verbose>true</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <format>properties</format>
                    <abbrevLength>7</abbrevLength>
                    <commitIdGenerationMode>flat</commitIdGenerationMode>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${spotify-docker.version}</version>
                <configuration>
                    <imageName>sevi/sevi-ontology-service</imageName>
                    <dockerDirectory>docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.outputDirectory}</directory>
                            <include>${git.properties}</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                        </configuration>
                        <id>pre-test</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <configuration>
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                        </configuration>
                        <id>pre-itest</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.15.8</version>
                <configuration>
                    <skip>${skipTests}</skip>
                    <images>
                        <image>
                            <name>redis:3.2-alpine</name>
                            <run>
                                <log>
                                    <enabled>true</enabled>
                                    <color>green</color>
                                </log>
                                <ports>
                                    <port>6380:6379</port>
                                </ports>
                                <wait>
                                    <log>now ready</log>
                                    <time>120000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <name>sevi/sevi-fuseki:latest</name>
                            <run>
                                <log>
                                    <enabled>true</enabled>
                                    <color>blue</color>
                                </log>
                                <ports>
                                    <port>3535:3030</port>
                                </ports>
                                <cmd>
                                    --config=/jena-fuseki/config.ttl
                                </cmd>
                                <wait>
                                    <log>All ontologies uploaded!</log>
                                    <time>600000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <!-- Connect this plugin to the maven lifecycle around the integration-test phase. I.e. start the container
                     in pre-integration-test and stop it in post-integration-test. -->
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>${swagger-maven-plugin.version}</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>false</springmvc>
                            <locations>fi.vm.kapa.sevi.ontology.resource</locations>
                            <basePath>/sevi-ontology-service/ontology</basePath>
                            <info>
                                <title>Sevi Ontology Service</title>
                                <version>v1</version>
                                <description>This is a SeVi Ontology Service microservice</description>
                                <contact>
                                    <email>kapa@vrk.fi</email>
                                    <name>Service Views of Kansallinen Palveluväylä (National Service Bus) by the Population Register Center of Finland</name>
                                    <url>http://palveluvayla.fi/</url>
                                </contact>
                                <license>
                                    <url>http://opensource.org/licenses/MIT</url>
                                    <name>MIT</name>
                                </license>
                            </info>
                            <swaggerDirectory>${project.build.outputDirectory}/static/swagger/</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>1.3.5.1</version>
                <configuration>
                    <skipProvidedScope>true</skipProvidedScope>
                    <skipRuntimeScope>true</skipRuntimeScope>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <properties>
        <sevi.commons.version>1.2.3-SNAPSHOT</sevi.commons.version>
        <git.properties>git.properties</git.properties>
        <jenkins.buildnumber>-1</jenkins.buildnumber>
        <java.version>1.8</java.version>
        <elasticsearch-test.version>1.2.1</elasticsearch-test.version>
        <es.version>1.4.4</es.version>
        <archaius.version>0.6.6</archaius.version>
        <spotify-docker.version>0.4.10</spotify-docker.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <jacoco-maven-plugin.version>0.7.4.201502262128</jacoco-maven-plugin.version>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.reportPath>target/jacoco-ut.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.host.url>http://localhost:11000</sonar.host.url>
        <sonar.jdbc.url>jdbc:postgresql://localhost:11001/sonar</sonar.jdbc.url>
        <swagger.version>1.5.1-M2</swagger.version>
        <swagger-maven-plugin.version>3.0.0</swagger-maven-plugin.version>
        <powermock.version>1.6.4</powermock.version>
    </properties>

</project>
